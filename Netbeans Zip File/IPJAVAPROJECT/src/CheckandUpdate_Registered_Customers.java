
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author User
 */
public class CheckandUpdate_Registered_Customers extends javax.swing.JFrame {

    /**
     * Creates new form Login_Registered_Students
     */
    public CheckandUpdate_Registered_Customers() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        btnCheckDetails = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtAccountNo = new javax.swing.JTextField();
        lblAccount = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        optAccDetails = new javax.swing.JRadioButton();
        optTransaction = new javax.swing.JRadioButton();
        optDW = new javax.swing.JRadioButton();
        lblCUHeading = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDetails = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        lblPassword.setFont(new java.awt.Font("Tempus Sans ITC", 1, 11)); // NOI18N
        lblPassword.setForeground(new java.awt.Color(153, 0, 51));
        lblPassword.setText("Password");

        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        btnCheckDetails.setForeground(new java.awt.Color(0, 153, 102));
        btnCheckDetails.setText("Check Details");
        btnCheckDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckDetailsActionPerformed(evt);
            }
        });

        btnBack.setForeground(new java.awt.Color(0, 153, 102));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblName.setFont(new java.awt.Font("Tempus Sans ITC", 1, 11)); // NOI18N
        lblName.setForeground(new java.awt.Color(153, 0, 51));
        lblName.setText("Name");

        txtAccountNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAccountNoActionPerformed(evt);
            }
        });

        lblAccount.setFont(new java.awt.Font("Tempus Sans ITC", 1, 11)); // NOI18N
        lblAccount.setForeground(new java.awt.Color(153, 0, 51));
        lblAccount.setText("Account No.");

        btnUpdate.setForeground(new java.awt.Color(0, 153, 102));
        btnUpdate.setText("Update Profile");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        buttonGroup1.add(optAccDetails);
        optAccDetails.setForeground(new java.awt.Color(0, 0, 153));
        optAccDetails.setText("Account Details");

        buttonGroup1.add(optTransaction);
        optTransaction.setForeground(new java.awt.Color(0, 0, 153));
        optTransaction.setText("Transaction Details");
        optTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optTransactionActionPerformed(evt);
            }
        });

        buttonGroup1.add(optDW);
        optDW.setForeground(new java.awt.Color(0, 0, 153));
        optDW.setText("Deposit\\Withdrawal Details");

        lblCUHeading.setBackground(new java.awt.Color(153, 153, 255));
        lblCUHeading.setFont(new java.awt.Font("Yu Gothic UI Light", 3, 26)); // NOI18N
        lblCUHeading.setForeground(new java.awt.Color(0, 153, 0));
        lblCUHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCUHeading.setText("Check And Update Your Details Here");
        lblCUHeading.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tblDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblDetails);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblAccount, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                            .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblPassword, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                            .addComponent(txtPassword)
                            .addComponent(txtAccountNo)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnCheckDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(optAccDetails)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(optTransaction)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(optDW, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addComponent(lblCUHeading, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1028, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(lblCUHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAccountNo)
                            .addComponent(lblAccount))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPassword)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCheckDetails)
                            .addComponent(btnBack))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(optTransaction)
                            .addComponent(optAccDetails)
                            .addComponent(optDW))
                        .addGap(11, 11, 11)
                        .addComponent(btnUpdate))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCheckDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckDetailsActionPerformed
        String nam = txtName.getText(), accountno = txtAccountNo.getText(), sta = "Active";
        char[] password = txtPassword.getPassword();
        String pass = String.valueOf(password);
        DefaultTableModel model = (DefaultTableModel) tblDetails.getModel();
        int rows = model.getRowCount();
        if (rows > 0) {
            for (int i = 0; i < rows; i++) {
                model.removeRow(0);
            }
        }
        DefaultTableModel mode = new DefaultTableModel();
        tblDetails.setModel(mode);
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/ipproject?&useSSL=false", "root", "");
            Statement stmt = (Statement) con.createStatement();
            if (optAccDetails.isSelected()) {
                String query1 = "SELECT * FROM ACCOUNTDETAILS where AccountNo='" + accountno + "' and Name='" + nam + "' and Password='" + pass + "';";
                ResultSet rs = stmt.executeQuery(query1);
                mode.addColumn("Account Number");
                mode.addColumn("Name");
                mode.addColumn("Father Name");
                mode.addColumn("Mobile Number");
                mode.addColumn("Address");
                mode.addColumn("Total Amount in Acount");
                mode.addColumn("Last Used");
                while (rs.next()) {
                    String Name = rs.getString("Name");
                    String AccountNo = rs.getString("AccountNo");
                    String mob = rs.getString("MobileNo");
                    String Fname = rs.getString("FatherName");
                    String adr = rs.getString("Address");
                    String tot = rs.getString("TotalAmount");
                    String dlu = rs.getString("DateLastUsed");
                    mode.addRow(new Object[]{AccountNo, Name, Fname, mob, adr, tot, dlu});
                }
            } else if (optTransaction.isSelected()) {
                String query2 = "SELECT * FROM transactiondetails,accountdetails where accountdetails.AccountNo=transactiondetails.AccountNoSender and ((AccountNoSender='" + accountno + "' and NameSender='" + nam + "' and Password='" + pass + "') or (AccountNoReciever='" + accountno + "' and NameReciever='" + nam + "' and Password='" + pass + "'));";
                ResultSet rs = stmt.executeQuery(query2);
                mode.addColumn("Account Number of Sender");
                mode.addColumn("Name of Sender");
                mode.addColumn("Account Number of Sender");
                mode.addColumn("Name of Sender");
                mode.addColumn("Transaction Amount");
                mode.addColumn("Date Of Transaction");
                while (rs.next()) {
                    String nameS = rs.getString("NameSender");
                    String AccountS = rs.getString("AccountNoSender");
                    String AccountR = rs.getString("AccountNoReciever");
                    String nameR = rs.getString("NameReciever");
                    String Amt = rs.getString("Amount");
                    String dot = rs.getString("DateOfTransaction");
                    mode.addRow(new Object[]{AccountS, nameS, AccountR, nameR, Amt, dot});
                }

            } else if (optDW.isSelected()) {
                String query3 = "SELECT * FROM deposit_withdrawaldetails,accountdetails where accountdetails.AccountNo=deposit_withdrawaldetails.AccountNo and accountdetails.AccountNo='" + accountno + "' and accountdetails.Name='" + nam + "' and Password='" + pass + "';";
                ResultSet rs = stmt.executeQuery(query3);
                mode.addColumn("Account Number");
                mode.addColumn("Name");
                mode.addColumn("Deposit/Withdraw");
                mode.addColumn("Deposit/Withdraw Amount");
                mode.addColumn("Date Of Deposit/Withdraw");
                while (rs.next()) {
                    String nams = rs.getString("Name");
                    String Account = rs.getString("AccountNo");
                    String dw = rs.getString("D_W");
                    String Amnt = rs.getString("Amount");
                    String dodw = rs.getString("DateOfDW");
                    mode.addRow(new Object[]{Account, nams, dw, Amnt, dodw});
                }

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnCheckDetailsActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        new Update_Profile_Customers().setVisible(true);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        optAccDetails.setSelected(true);
    }//GEN-LAST:event_formWindowGainedFocus

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    private void optTransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optTransactionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_optTransactionActionPerformed

    private void txtAccountNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAccountNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAccountNoActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckandUpdate_Registered_Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckandUpdate_Registered_Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckandUpdate_Registered_Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckandUpdate_Registered_Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckandUpdate_Registered_Customers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCheckDetails;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAccount;
    private javax.swing.JLabel lblCUHeading;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JRadioButton optAccDetails;
    private javax.swing.JRadioButton optDW;
    private javax.swing.JRadioButton optTransaction;
    private javax.swing.JTable tblDetails;
    private javax.swing.JTextField txtAccountNo;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    // End of variables declaration//GEN-END:variables
}
